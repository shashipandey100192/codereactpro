react.js
=======================
1) install
	1) node.js
	2) git bash
	3) git account
2)  what is npm ( node package manager)
3) CLI vs GUI  
4) flag  ( sort key)
5) create react project 
	npx create-react-app reactpro
----------------------------------------
6) port : address 
7) code .    open in vscode
8) directory structure 
9) npm start   // run application / server
10) ctrl+ c	/ close server / application 
11) types of import and export
	1) default  import and export
	2) name  import and export   {}

Note: function name and file name must have start from capital letter
Note: 3000 default port(address) number

12) elements wrap
	1) html element
	2) <></>
	3) Fragment 
13) file types
	1) .js
	2) .jsx
	3) .ts
	4) .tsx
14) expression {}
15) sorce directory( image) (folder)
	1) src
	2) public
	3) online 
---------------------------------------------------
git
=============================
1) git login 
2) create repo 
NOte: project name and repo name must have same 
3) git remote -v			// check your connection
4) git remote add origin  path 		// create connection
5) git init 	 // initialized
6) git add --all  // add all data 
7) git commit -m "any msg" // comment for move
8) git 'clone paste repor path'
9) npm install		// install node_modules
10) git pull origin master  // pull data from git repo

------------------------------------
	1) git add --all
	2) git commit -m ""
	3) git pull origin master
Note: npm install   // when add new package in project or clone first time
Note: replace class to className
Note: all elements must have close 

git config --globla user.email "your emailid"
git config --global user.name "your name"
-----------------
npm ERR! errno -4058    ( npm install -g typescript )
-----------------------------------------------------------------
11) react ui
	1) custom( html, css)
	2) bootstrap
	3) react-bootstra
	4) Material UI
12) bootstrap
	1) install
		npm install bootstrap		// install latest version
		npm uninstall bootstrap		// uninstall package
		npm install bootstrap@4.0.0	// install particular version of package
	2) import (in index.js)
		import "bootstrap/dist/css/bootstrap.min.css";
		import "bootstrap/dist/js/bootstrap.bundle"
---------------------------------------------
13) react bootstrap
	1) npm install react-bootstra bootstrap
	2) import

14) Material UI
	1) npm install @mui/material @emotion/react @emotion/styled
	2) npm install @mui/material @mui/styled-engine-sc styled-components
	3) npm install @fontsource/roboto
15) icons 
	1) npm install react-icons --save
	2) import icons
-----------------------------------------------------
16) routing (navigate)
	1) npm install react-router-dom
	2) import {Link, BrowserRouter, Route, Routes } 
Note: href 	replace  to
Note: a 	replace Link
----------------------------------------------------------
17) jsx  {} expression  
18) hooks (function)
	1) useState()
19)  state and lifecycle 
---------------------------------------------------------
20) nested routing
	<Outlet>
21) network cell
	1) fetch()  
	2) axios() 	//lab
About http response status
	Informational responses (100 – 199)
	Successful responses (200 – 299)
	Redirection messages (300 – 399)
	Client error responses (400 – 499)
	Server error responses (500 – 599)
----------------------------------------------------
22) axios
	1) install
		npm install axios 
	2) import
		import axios from 'axios';
-----------------------------------------------------------
23) param routing
	1) useParams()   	// hooks/function
	key 
24) props (props driling) ( parent to child data transfor)
----------------------------------------------------------
25) form validation
	1) lab
		1) react-hook-form
			1) npm install react-hook-form
			2) import
	2) custom
------------------------------------------------------------
26) chart (graph)
	1) npm install recharts
	2) import 
27) production 
	npm run build      // create build folder for production 
------------------------------------------------------
28) lazy loading
	1) lazy()
	2) fallback
	3) supspance
	4) import()
29) storage
	1) local
	2) session
	3) cookies
----------------------------------
30) condition based rendering
31) redux
	1) configureStore
	2) reducer
	3) Provider
	4) store
	5) createSlice
	6) useSelector
	7) useDispatch
	8) dispatch
	9) state
	10) actions
	A) install
		npm install @reduxjs/toolkit react-redux
	B) create store
		create Mystore.js config 
	C) wrap whole application
		<Provider store={<Mystore/>}></Provider>
	D) create actions
---------------------------------------
31) build ( production)
	npm run build
32) json server
	1) install 
		npm install json-server
	2) run server
		json-server --watch -p 3333 
		
useState()
useEffect()
useNavigate()
useParam()
useSelect
useDespatch()
useRef()
useContext()
useForm()

		
	

	





	



	
	








	












 


